<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/DTAttributedTextContentViewDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/DTAttributedTextContentViewDelegate</TokenIdentifier>
			<Abstract>Protocol to provide custom views for elements in an DTAttributedTextContentView. Also the delegate gets notified once the text view has been drawn.</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>
			
			<NodeRef refid="38"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:didDrawLayoutFrame:inContext:</TokenIdentifier>
			<Abstract>Called after a layout frame or a part of it is drawn.</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>			
			
			<Declaration>- (void)attributedTextContentView:(DTAttributedTextContentView *)attributedTextContentView didDrawLayoutFrame:(DTCoreTextLayoutFrame *)layoutFrame inContext:(CGContextRef)context</Declaration>
			<Parameters>
				<Parameter>
					<Name>attributedTextContentView</Name>
					<Abstract>The content view that drew a layout frame</Abstract>
				</Parameter><Parameter>
					<Name>layoutFrame</Name>
					<Abstract>The layout frame that was drawn for</Abstract>
				</Parameter><Parameter>
					<Name>context</Name>
					<Abstract>The graphics context that was drawn into</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attributedTextContentView:didDrawLayoutFrame:inContext:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:shouldDrawBackgroundForTextBlock:frame:context:forLayoutFrame:</TokenIdentifier>
			<Abstract>Called before the text belonging to a text block is drawn.</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>			
			
			<Declaration>- (BOOL)attributedTextContentView:(DTAttributedTextContentView *)attributedTextContentView shouldDrawBackgroundForTextBlock:(DTTextBlock *)textBlock frame:(CGRect)frame context:(CGContextRef)context forLayoutFrame:(DTCoreTextLayoutFrame *)layoutFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>attributedTextContentView</Name>
					<Abstract>The content view that drew a layout frame</Abstract>
				</Parameter><Parameter>
					<Name>textBlock</Name>
					<Abstract>The text block</Abstract>
				</Parameter><Parameter>
					<Name>context</Name>
					<Abstract>The graphics context that will be drawn into</Abstract>
				</Parameter><Parameter>
					<Name>layoutFrame</Name>
					<Abstract>The layout frame that will be drawn for</Abstract>
				</Parameter><Parameter>
					<Name>returns</Name>
					<Abstract>YES is the standard fill of the text block should be drawn, NO if it should not</Abstract>
				</Parameter><Parameter>
					<Name>rect</Name>
					<Abstract>The frame within the content view's coordinate system that will be drawn into</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attributedTextContentView:shouldDrawBackgroundForTextBlock:frame:context:forLayoutFrame:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:viewForAttachment:frame:</TokenIdentifier>
			<Abstract>Provide custom view for an attachment, e.g. an imageView for images</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>			
			
			<Declaration>- (UIView *)attributedTextContentView:(DTAttributedTextContentView *)attributedTextContentView viewForAttachment:(DTTextAttachment *)attachment frame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>attributedTextContentView</Name>
					<Abstract>The content view asking for a custom view</Abstract>
				</Parameter><Parameter>
					<Name>attachment</Name>
					<Abstract>The DTTextAttachment that this view should represent</Abstract>
				</Parameter><Parameter>
					<Name>frame</Name>
					<Abstract>The frame that the view should use to fit on top of the space reserved for the attachment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The view that should represent the given attachment</Abstract></ReturnValue>
			<Anchor>//api/name/attributedTextContentView:viewForAttachment:frame:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:viewForLink:identifier:frame:</TokenIdentifier>
			<Abstract>Provide button to be placed over links, the identifier is used to link multiple parts of the same A tag</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>			
			
			<Declaration>- (UIView *)attributedTextContentView:(DTAttributedTextContentView *)attributedTextContentView viewForLink:(NSURL *)url identifier:(NSString *)identifier frame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>attributedTextContentView</Name>
					<Abstract>The content view asking for a custom view</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract>The NSURL of the hyperlink</Abstract>
				</Parameter><Parameter>
					<Name>identifier</Name>
					<Abstract>An identifier that uniquely identifies the hyperlink within the document</Abstract>
				</Parameter><Parameter>
					<Name>frame</Name>
					<Abstract>The frame that the view should use to fit on top of the space reserved for the attachment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The view that should represent the given hyperlink</Abstract></ReturnValue>
			<Anchor>//api/name/attributedTextContentView:viewForLink:identifier:frame:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:viewForAttributedString:frame:</TokenIdentifier>
			<Abstract>Provide generic views for all attachments.</Abstract>
			<DeclaredIn>DTAttributedTextContentView.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/DTAttributedTextContentViewDelegate/attributedTextContentView:viewForAttachment:frame:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (UIView *)attributedTextContentView:(DTAttributedTextContentView *)attributedTextContentView viewForAttributedString:(NSAttributedString *)string frame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>attributedTextContentView</Name>
					<Abstract>The content view asking for a custom view</Abstract>
				</Parameter><Parameter>
					<Name>string</Name>
					<Abstract>The attributed sub-string containing this element</Abstract>
				</Parameter><Parameter>
					<Name>frame</Name>
					<Abstract>The frame that the view should use to fit on top of the space reserved for the attachment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The view that should represent the given hyperlink or text attachment</Abstract></ReturnValue>
			<Anchor>//api/name/attributedTextContentView:viewForAttributedString:frame:</Anchor>
		</Token>
		
	</File>
</Tokens>